import { ProjectShape } from '@seleniumhq/side-model';
import { Command } from 'commander';
export declare type JSON = null | string | number | boolean | JSON[] | {
    [key: string]: JSON;
};
export interface Project extends ProjectShape {
    path: string;
}
export declare type ProxyType = 'autodetect' | 'direct' | 'manual' | 'pac' | 'socks' | 'system';
export declare type ProxyInputOptions = string | Record<string, string | string[] | number>;
export declare type ProxyCapabilities = {
    proxyType: 'autodetect' | 'direct' | 'manual' | 'pac' | 'system';
    proxyAutoconfigUrl?: string;
    ftpProxy?: string;
    httpProxy?: string;
    noProxy?: string[];
    sslProxy?: string;
    socksProxy?: string;
    socksVersion?: number;
};
export interface SideRunnerCLIConfig {
    baseUrl: string;
    capabilities: string;
    configFile: string;
    debug: boolean;
    debugStartup: boolean;
    filter: string;
    force: boolean;
    jestOptions: string;
    maxWorkers: number;
    proxyOptions?: string;
    proxyType?: ProxyType;
    retries: number;
    server: string;
    timeout: number;
}
export declare type SideRunnerAPI = Command & SideRunnerCLIConfig;
export declare type Configuration = Required<Pick<SideRunnerCLIConfig, 'baseUrl' | 'filter' | 'maxWorkers' | 'server' | 'timeout'>> & Pick<SideRunnerCLIConfig, 'debugStartup' | 'debug' | 'force' | 'proxyType' | 'retries'> & {
    capabilities: Record<string, JSON>;
    projects: string[];
    proxyOptions: ProxyInputOptions;
    runId: string;
    path: string;
};
//# sourceMappingURL=types.d.ts.map